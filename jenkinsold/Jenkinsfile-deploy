podTemplate(
    label: 'deploy-customer-service-__CLUSTER__-pod',
    containers: [
        containerTemplate(
            name: 'helm', 
            image: 'ibmcase/helm:latest', 
            alwaysPullImage: false, 
            ttyEnabled: true, 
            command: 'cat'
        )
    ],
    volumes: [
      secretVolume(
          secretName: '__CLUSTER__-config', 
          mountPath: '/var/run/secrets/kube-config'
      ),
      secretVolume(
          secretName: 'bluemix-api-key', 
          mountPath: '/var/run/secrets/bluemix-api-key'
      ),
      configMapVolume(
          configMapName: 'bluemix-target', 
          mountPath: '/var/run/configs/bluemix-target'
      )
    ],
) {
    node ('deploy-customer-service-__CLUSTER__-pod') {
        git url: '__GIT_URL__', branch: '__GIT_BRANCH__'
        container('helm') {
            stage ('Install Chart') {
                sh """
                #!/bin/bash
                BX_REGISTRY=`cat /var/run/configs/bluemix-target/bluemix-registry`
                BX_CR_NAMESPACE=`cat /var/run/configs/bluemix-target/bluemix-registry-namespace`
                BX_ORG=`cat /var/run/configs/bluemix-target/bluemix-org`
                BX_SPACE=`cat /var/run/configs/bluemix-target/bluemix-space`
                CLUSTER_NAME=`cat /var/run/configs/bluemix-target/kube-cluster-name`
                BX_API_KEY=`cat /var/run/secrets/bluemix-api-key/api-key`

                export KUBECONFIG=`ls -1 /var/run/secrets/kube-config/kube-config-*.yml`

                # Init helm
                helm init

                # Install/Upgrade Chart
                cd chart/bluecompute-customer

                release=`helm list | grep customer | awk '{print \$1}' | head -1`
                helm_params="--set image.tag=${env.image_tag} \
                  --set image.repository=${env.image_repository} \
                  --set hs256key.skipDelete=true \
                  --set configMap.bluemixOrg=\${BX_ORG} \
                  --set configMap.bluemixSpace=\${BX_SPACE} \
                  --set configMap.kubeClusterName=\${CLUSTER_NAME} \
                  --set secret.apiKey=\${BX_API_KEY}"

                if [[ ! -z "${env.image_pullSecret}" ]]; then
                  helm_params="\${helm_params} --set image.pullSecret=${env.image_pullSecret}"
                fi

                if [[ ! -z "${env.image_pullSecretName}" ]]; then
                  helm_params="\${helm_params} --set image.pullSecretName=${env.image_pullSecretName}"
                fi

                if [[ -z "\${release// }" ]]; then
                    echo "Installing bluecompute-customer chart for the first time"
                    time helm install --name customer . \
                      \${helm_params}
                      --debug \
                      --wait \
                      --timeout 600
                else
                    echo "Upgrading bluecompute-customer chart release"
                    time helm upgrade  \
                      \${helm_params} \
                      --debug \
                      --wait \
                      --timeout 600 \
                      customer .
                fi

                """
            }
        }
    }
}
